///////////////////////////////////////////////////////////////////////////////////////////////////
There is a fair amount in the rest of the files to look at.  See the .diff file in the original Binned analysis repository for our additions, see how the additions are added and separate them out if they can.  For now let's just rename Function -> BinnedFunction to keep it clear where it came from.  Later we can get a better handle on what each function is left doing and we can rename them to something more sensible (for example Function -> BinnedFunction -> FindNormalizationOptions)

Once you see what code has been added see how those functions and variables are used inside the code in the binned analysis (located in binnedanalysis/anita3code/source/)

All header files SHOULD be done.  They are located in this project under /include/

When you finish a .c* file put it in this repository under /src/

It is not a bad idea to have multiple people hit the same file to double check our work.
///////////////////////////////////////////////////////////////////////////////////////////////////

Completed files:

AnalysisConfig.cc
 - done (Ian)
 	- Can I get someone to double check that we can safely remove most of this file like I did?

BedmapReader.cxx
 - Done (Ian)
 	- We only add a section of code at the end that only depends on a few variables within the original BedmapReader.cxx.  Since we are inheriting this class it should give us access to those functions as part of inheritance.
 	- Again, someone please check this.

ResponseManager.cc
 - Done (Ian)
 	- No functional difference between our files and the original Anita files.  This file and the associated .h can be left out.

Files left to do:

Analyzer.cc
 - Uses a correlator object (defined in Correlator.h) called corr that is called in Analyzer.h as a private object.
 - Not sure what is going on with TGraphAligned.  We add "const TGraphAligned* hilbert = wf->hilbertEnvelope();" at line 766.
 - The entire section between line 812 and 891 is added by us.
	- We call hilbertTransform() multiple times.  I don't know where this is defined, the FFTtools command is gethilbertTransform().  Probably from some library but we'll need to figure out which one so we know to include it.  There is a pretty big list of includes in this file.
	- Tmath looks like some root stuff.
	- GetN() looks to be from healpix?
	- pk2pk() likely means peak to peak but I can't find what library this is defined in.
	- thissnr, thatsnr, and othersnr seem redundant.  We only define them to then define snr1, snr2, and snr3 respectively.  Maybe just lose these lines and define snr1, snr2, and snr3 directly. Also can we give these more descriptive names while we are at this?

 - Lines 62-70
 	- This appears to be setting the options for the Analyzer object.
	- The part of obvious interest to us is line 64 where corr(...) is called.  This is where a correlator object is configured.
	- Calls AnalysisConfig::getResponseString().   We may need to switch this to Normalization.

 - Lines 377-378
 	- Need to find the difference between the function added by Sammy and the commented out function. disallowAntennas vs setDisallowedAntennas.
 		- If these functions are doing the same thing then we should use the functions already in Correlator.h instead of defining new ones in BinnedCorrelator.h

 - Private section of Analyzer.h
 	- Lines 139-176 appear to be calling some object, we need to find if we use these objects created here.  If we do we will either need them out of the private section or
 	we can redclare them as needed.
 		- We definitely use the correlator object.  Current version of BinnedAnalyzer.h calls BinnedCorrelator bcorr.  Any place in our code where we call corr we should switch it to bcorr to refer to this object.
 		- Likely the same story with line 153.

 - Amy mentioned that we should seperate the error ellipse code in stage01 into its own function as it might end up being used elsewhere. I imagine we will be doing this to alot of the stuff in stage01 so its not 4300 lines long, but im putting it here so we don't forget.
